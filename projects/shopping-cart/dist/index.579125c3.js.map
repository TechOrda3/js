{"mappings":"AAAA,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,UAAU,KAAK,gBAAgB,CAAC;AAEtC,qCAAqC;AACrC,IAAI,QAAQ,EAAE;AAEd,SAAS,eAAe;IACpB,MAAM,OAAO,MAAM,GAAG,CAAC,CAAC,OAAS,CAAC;oCACF,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,QAAQ,GAAG,YAAY,EAAE,CAAC;6BACpD,EAAE,KAAK,IAAI,CAAC;iCACR,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC;WACrD,CAAC,EAAE,IAAI,CAAC;IACf,KAAK,SAAS,GAAG;AACrB;AAEA,SAAS,aAAa,CAAC,EAAE;IACrB,EAAE,cAAc;IAChB,sCAAsC;IACtC,MAAM,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,KAAK;IAEvC,uCAAuC;IACvC,IAAI,CAAC,MAAM;IAEX,MAAM,OAAO;QACT,MAAM;QACN,IAAI,OAAO,UAAU;QACrB,UAAU,KAAK;IACnB;IACA,MAAM,IAAI,CAAC;IACX,EAAE,MAAM,CAAC,KAAK;IAEd,KAAK,aAAa,CAAC,IAAI,YAAY;AACvC;AAEA,SAAS,0BAA0B;IAC/B,MAAM,UAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;IAChD,IAAI,SAAS,QAAQ;QACjB,MAAM,IAAI,IAAI;QACd,KAAK,aAAa,CAAC,IAAI,YAAY;IACvC,CAAC;AACL;AAEA,SAAS,uBAAuB;IAC5B,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;AACjD;AAEA,SAAS,WAAW,EAAE,EAAE;IACpB,QAAQ,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IACzC,KAAK,aAAa,CAAC,IAAI,YAAY;AACvC;AAEA,SAAS,eAAe,EAAE,EAAE;IACxB,2CAA2C;IAC3C,wDAAwD;IACxD,wBAAwB;IACxB,wCAAwC;IACxC,MAAM,WAAW,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,KAAK;YAChD,GAAG,IAAI;YACP,UAAU,CAAC,KAAK,QAAQ;QAC5B,IAAG,IAAI;IACP,QAAQ;IACR,KAAK,aAAa,CAAC,IAAI,YAAY;AACvC;AAEA,aAAa,gBAAgB,CAAC,UAAU;AACxC,KAAK,gBAAgB,CAAC,gBAAgB;AACtC,KAAK,gBAAgB,CAAC,gBAAgB;AACtC,OAAO,gBAAgB,CAAC,QAAQ;AAEhC,OAAO,gBAAgB,CAAC,WAAW,CAAC,IAAM;IACtC,QAAQ,KAAK,KAAK,CAAC,EAAE,QAAQ;IAC7B,KAAK,aAAa,CAAC,IAAI,YAAY;AACvC;AAEA,KAAK,gBAAgB,CAAC,SAAS,SAAS,CAAC,EAAE;IACvC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,WACjB,WAAW,EAAE,MAAM,CAAC,KAAK;IAG7B,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,2BACjB,eAAe,EAAE,MAAM,CAAC,KAAK;AAErC","sources":["src/index.js"],"sourcesContent":["const shoppingForm = document.querySelector(\".shopping\");\nconst list = document.querySelector(\".list\");\nconst buttons = list.querySelectorAll('button');\n\n// We need an array to hold our state\nlet items = [];\n\nfunction displayItems() {\n    const html = items.map((item) => `<li class=\"shopping-item\">\n      <input type=\"checkbox\" value=\"${item.id}\" ${item.complete ? 'checked' : ''}>\n      <span class=\"itemName\">${item.name}</span>\n      <button aria-label=\"Remove ${item.name}\" value=\"${item.id}\">&times;</button>\n      </li>`).join('');\n    list.innerHTML = html;\n}\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n    // const name = e.currentTarget.value;\n    const name = e.currentTarget.item.value;\n\n    // if it's empty, then don't submit it.\n    if (!name) return;\n\n    const item = {\n        name: name,\n        id: crypto.randomUUID(),\n        complete: false\n    };\n    items.push(item);\n    e.target.reset();\n\n    list.dispatchEvent(new CustomEvent('itemsUpdated'))\n}\n\nfunction restoreFromLocalStorage() {\n    const lsItems = JSON.parse(localStorage.getItem(\"items\"));\n    if (lsItems?.length) {\n        items.push(...lsItems);\n        list.dispatchEvent(new CustomEvent('itemsUpdated'));\n    }\n}\n\nfunction mirrorToLocalStorage() {\n    localStorage.setItem('items', JSON.stringify(items));\n}\n\nfunction deleteItem(id) {\n    items = items.filter(item => item.id !== id);\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nfunction markAsComplete(id) {\n    // console.log(\"Marking as complete!\", id);\n    // const itemRef = items.find((item) => item.id === id);\n    // console.log(itemRef);\n    // itemRef.complete = !itemRef.complete;\n    const newItems = items.map(item => item.id === id ? {\n        ...item,\n        complete: !item.complete\n    }: item);\n    items = newItems;\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n}\n\nshoppingForm.addEventListener('submit', handleSubmit);\nlist.addEventListener('itemsUpdated', displayItems);\nlist.addEventListener('itemsUpdated', mirrorToLocalStorage);\nwindow.addEventListener('load', restoreFromLocalStorage);\n\nwindow.addEventListener('storage', (e) => {\n    items = JSON.parse(e.newValue);\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\n});\n\nlist.addEventListener('click', function(e) {\n    if (e.target.matches('button')) {\n        deleteItem(e.target.value);\n    }\n\n    if (e.target.matches('input[type=\"checkbox\"]')) {\n        markAsComplete(e.target.value);\n    }\n});\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}